module MapRedus
  RedisKey = MapRedus::Keys
  JobInfo = RedisKey
  
  #### USED WITHIN job.rb ####
  
  # Holds the current map reduce processes that are either running or which still have data lying around
  #
  redis_key :jobs, "mapreduce:jobs"
  
  # Holds the information (mapper, reducer, etc.) in json format for a map reduce job with pid PID
  #
  redis_key :pid, "mapreduce:job:PID"

  # All the keys that the map produced
  #
  redis_key :keys, "mapreduce:job:PID:keys"

  # The hashed key to actual string value of key
  #
  redis_key :hash_to_key, "mapreduce:job:PID:keys:HASHED_KEY" # to ACTUAL KEY
  
  # The list of values for a given key generated by our map function.
  # When a reduce is run it takes elements from this key and pushes them to :reduce
  #
  # key - list of values
  #
  redis_key :map, "mapreduce:job:PID:map_key:HASHED_KEY"
  redis_key :reduce, "mapreduce:job:PID:map_key:HASHED_KEY:reduce"
  
  # Temporary redis space for reduce functions to use
  #
  redis_key :temp, "mapreduce:job:PID:temp_reduce_key:HASHED_KEY:UNIQUE_REDUCE_HOSTNAME:UNIQUE_REDUCE_PROCESS_ID"

  # If we want to hold on to our final data we have a key to put that data in
  # In normal map reduce we would just be outputting files
  #
  redis_key :result, "mapreduce:job:PID:result"
  redis_key :result_custom_key, "mapreduce:result:KEYNAME"


  #### USED WITHIN master.rb ####
  
  # Keeps track of the current slaves (by appending "1" to a redis list)
  #
  # TODO: should append some sort of proper process id so we can explicitly keep track
  #       of processes
  #
  redis_key :slaves, "mapreduce:job:PID:master:slaves"

  #
  # Use this key to keep track of which operations are currently being run
  #
  # Example
  #   state => map_in_progress
  #            reduce_in_progress
  #            finalize_in_progress
  #            complete
  #            failed
  #
  redis_key :state, "mapreduce:job:PID:master:state"

  # These keep track of timing information for a map reduce job of pid PID
  #
  redis_key :requested_at, "mapreduce:job:PID:request_at"
  redis_key :started_at, "mapreduce:job:PID:started_at"
  redis_key :finished_at, "mapreduce:job:PID:finished_at"
  redis_key :recent_time_to_complete, "mapreduce:job:recent_time_to_complete"
end
